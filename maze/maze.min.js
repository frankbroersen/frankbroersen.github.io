var maze;!function(){function t(t,i){return Math.floor(Math.random()*(i-t)+t)}maze={element:!1,max_x:!1,max_y:!1,start:!1,current:!1,size:0,visited:{},schedule:{},speed:20,interval:!1,generate:function(t,i,e){this.element=t,this.max_x=i-1,this.max_y=e-1,this.size=i*e,this.start=this.current=this.findRandomStartingPoint(),this.markAsVisited(this.start[0],this.start[1]),this.getPositionElement(this.start[0],this.start[1]).addClass(0===this.start[0]?"noborder-left":"noborder-bottom"),this.interval=setInterval(function(){maze.findNext()},this.speed)},complete:function(){this.current[0]+1===this.max_x?this.getPositionElement(this.current[0],this.current[1]).addClass("noborder-right"):this.current[0]-1<0?this.getPositionElement(this.current[0],this.current[1]).addClass("noborder-left"):this.current[1]-1<0?this.getPositionElement(this.current[0],this.current[1]).addClass("noborder-top"):this.current[1]-1>this.max_y?this.getPositionElement(this.current[0],this.current[1]).addClass("noborder-bottom"):this.findRandomExit()},findRandomExit:function(){this.getPositionElement(this.max_x-1,t(0,this.max_y-1)).addClass("noborder-right")},findNext:function(){var t=this.findNeighbours(this.current[0],this.current[1]),i=this.pickRandomNeighbour(t);return i?(this.removeBorderLines(i),this.markAsVisited(i[0],i[1]),void(this.current=i)):(this.findFromSchedule(),!1)},findFromSchedule:function(){clearInterval(this.interval);var t=Object.keys(this.schedule);if(t.length<1)return void this.complete();var i=this.schedule[t[0]];this.current=i.previous,delete this.schedule[t[0]],this.current=i,this.markAsVisited(i[0],i[1]),this.interval=setInterval(function(){maze.findNext()},this.speed)},removeBorderLines:function(t){t[0]>this.current[0]?(this.getPositionElement(t[0],t[1]).addClass("noborder-left"),this.getPositionElement(this.current[0],this.current[1]).addClass("noborder-right")):t[0]<this.current[0]?(this.getPositionElement(t[0],t[1]).addClass("noborder-right"),this.getPositionElement(this.current[0],this.current[1]).addClass("noborder-left")):t[1]>this.current[1]?(this.getPositionElement(t[0],t[1]).addClass("noborder-top"),this.getPositionElement(this.current[0],this.current[1]).addClass("noborder-bottom")):t[1]<this.current[1]&&(this.getPositionElement(t[0],t[1]).addClass("noborder-bottom"),this.getPositionElement(this.current[0],this.current[1]).addClass("noborder-top"))},getPositionElement:function(t,i){return this.element.find('[data-x="'+t+'"][data-y="'+i+'"]')},markAsCandidate:function(t,i){this.getPositionElement(t,i).addClass("candidate")},markAsVisited:function(t,i){return this.getPositionElement(t,i).addClass("visited"),this.visited[this.hashPosition(t,i)]=!0,this.isScheduled(t,i)&&this.unSchedule(t,i),this.isCompleted()},findNeighbours:function(t,i){var e=[];return t+1<this.max_x&&this.isVisited(t+1,i)===!1&&e.push([t+1,i]),i+1<this.max_y&&this.isVisited(t,i+1)===!1&&e.push([t,i+1]),t-1>-1&&this.isVisited(t-1,i)===!1&&e.push([t-1,i]),i-1>-1&&this.isVisited(t,i-1)===!1&&e.push([t,i-1]),e},pickRandomNeighbour:function(i){if(!i.length)return!1;var e=t(0,i.length),s=i[e];for(var n in i)e!==parseInt(n)&&(i[n].previous=s,this.isScheduled(i[n][0],i[n][1])!==!0&&(this.schedule[this.hashPosition(i[n][0],i[n][1])]=this.current));return s},hashPosition:function(t,i){return t+"_"+i},isVisited:function(t,i){return"undefined"!=typeof this.visited[this.hashPosition(t,i)]},isScheduled:function(t,i){return"undefined"!=typeof this.schedule[this.hashPosition(t,i)]},unSchedule:function(t,i){delete this.schedule[this.hashPosition(t,i)]},isCompleted:function(){return Object.keys(this.visited).length===this.size},findRandomStartingPoint:function(){return 1===t(0,1)?[t(0,this.max_x),0]:[0,t(0,this.max_y)]}}}();